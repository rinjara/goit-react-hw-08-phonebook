{"version":3,"file":"static/js/389.9adc870d.chunk.js","mappings":"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","sources":["components/App/App.styled.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/Contact.jsx","redux/filter/selectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 20px auto;\n  width: 800px;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 5px 15px 0px;\n`;\n\nexport const MainTitle = styled.h1`\n  font-family: 'Great Vibes', cursive;\n  font-size: 80px;\n  line-height: 160px;\n  font-weight: normal;\n  margin-bottom: 0px;\n  margin-top: 40px;\n  text-align: center;\n  text-shadow: 0 1px 1px #fff;\n`;\n\nexport const Title = styled.h2`\n  color: #7a7c7f;\n  font-size: 35px;\n  font-family: 'Libre Baskerville', serif;\n  line-height: 45px;\n  text-align: center;\n  text-shadow: 0 1px 1px #fff;\n  padding-top: 20px;\n`;\n","import { ErrorMessage, Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 480px;\n  gap: 20px;\n`;\n\nexport const StyledLabel = styled.label`\n  font-size: 25px;\n  font-weight: 500;\n  line-height: 24px;\n`;\n\nexport const StyledInput = styled(Field)`\n  text-align: center;\n  width: 200px;\n  height: 30px;\n  font: bold italic large serif;\n`;\n\nexport const StyledErrorMessage = styled(ErrorMessage)`\n  color: red;\n`;\n\nexport const StyledButton = styled.button`\n  width: 250px;\n  height: 50px;\n  text-transform: capitalize;\n  font-weight: bold;\n  font-size: large;\n  text-align: center;\n\n  padding: 0.6em 2em;\n  border: none;\n  outline: none;\n  color: rgb(255, 255, 255);\n  background: #111;\n  cursor: pointer;\n  position: relative;\n  z-index: 0;\n  border-radius: 10px;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n\n  &:before {\n    content: '';\n    background: linear-gradient(\n      45deg,\n      #ff0000,\n      #ff7300,\n      #fffb00,\n      #48ff00,\n      #00ffd5,\n      #002bff,\n      #7a00ff,\n      #ff00c8,\n      #ff0000\n    );\n    position: absolute;\n    top: -2px;\n    left: -2px;\n    background-size: 400%;\n    z-index: -1;\n    filter: blur(5px);\n    -webkit-filter: blur(5px);\n    width: calc(100% + 4px);\n    height: calc(100% + 4px);\n    animation: glowing-button-85 20s linear infinite;\n    transition: opacity 0.3s ease-in-out;\n    border-radius: 10px;\n  }\n\n  @keyframes glowing-button-85 {\n    0% {\n      background-position: 0 0;\n    }\n    50% {\n      background-position: 400% 0;\n    }\n    100% {\n      background-position: 0 0;\n    }\n  }\n\n  &:after {\n    z-index: -1;\n    content: '';\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background: #222;\n    left: 0;\n    top: 0;\n    border-radius: 10px;\n  }\n\n  &:hover {\n    transform: scale(1.2);\n  }\n`;\n","import { Formik } from 'formik';\nimport {\n  StyledForm,\n  StyledButton,\n  StyledLabel,\n  StyledInput,\n  StyledErrorMessage,\n} from './ContactForm.styled';\nimport * as yup from 'yup';\nimport {\n  useAddContactMutation,\n  useFetchContactsQuery,\n} from 'redux/contacts/contactsRTKSlice';\nimport { toast } from 'react-toastify';\n\nconst phoneRegEx =\n  /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/;\nconst nameRegEx = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(nameRegEx, {\n      message:\n        'Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d`Artagnan',\n      excludeEmptyString: false,\n    })\n    .required('Name is required field!'),\n  number: yup\n    .string()\n    .matches(phoneRegEx, {\n      message:\n        'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n      excludeEmptyString: false,\n    })\n    .required('Number is required field!'),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const { data: contacts } = useFetchContactsQuery();\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const handleSubmit = async (values, { resetForm }) => {\n    const isSameNameInTheList = contacts.find(\n      ({ name }) => name.toLowerCase() === values.name.toLowerCase()\n    );\n    if (isSameNameInTheList) {\n      toast.error(`${values.name} is already in the list!`);\n      return;\n    }\n    try {\n      await addContact(values);\n      toast.success('Contact added');\n      resetForm();\n    } catch (error) {\n      toast.error(`${error.message}`);\n    }\n  };\n\n  return (\n    <div>\n      {isLoading ? (\n        <b>Loading...</b>\n      ) : (\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleSubmit}\n          validationSchema={schema}\n        >\n          <StyledForm autoComplete=\"off\">\n            <StyledLabel htmlFor=\"name\">Friend Name:</StyledLabel>\n            <StyledInput type=\"text\" name=\"name\" />\n            <StyledErrorMessage name=\"name\" component=\"div\" />\n\n            <StyledLabel htmlFor=\"number\">Phone number:</StyledLabel>\n            <StyledInput type=\"tel\" name=\"number\" />\n            <StyledErrorMessage name=\"number\" component=\"div\" />\n\n            <StyledButton type=\"submit\">Add contact</StyledButton>\n          </StyledForm>\n        </Formik>\n      )}\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  list-style: none;\n  margin-bottom: 40px;\n  margin-top: 40px;\n  padding: 0;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 20px;\n  width: 500px;\n`;\n\nexport const Paragraph = styled.p`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  align-items: baseline;\n  justify-content: space-between;\n  width: 300px;\n`;\n\nexport const Text = styled.span`\n  /* font-style: italic; */\n  font-size: 20px;\n  font-weight: 500;\n  text-align: center;\n  text-shadow: 0 1px 1px #fff;\n`;\n\nexport const DelButton = styled.button`\n  all: unset;\n  width: 70px;\n  height: 25px;\n  font-size: 16px;\n  background: transparent;\n  border: none;\n  position: relative;\n  color: #f0f0f0;\n  cursor: pointer;\n  z-index: 1;\n  padding: 10px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  white-space: nowrap;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n\n  &::after,\n  &::before {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    z-index: -99999;\n    transition: all 0.4s;\n  }\n\n  &::before {\n    transform: translate(0%, 0%);\n    width: 100%;\n    height: 100%;\n    background: #28282d;\n    border-radius: 10px;\n  }\n\n  &::after {\n    transform: translate(10px, 10px);\n    width: 35px;\n    height: 35px;\n    background: #ffffff15;\n    backdrop-filter: blur(5px);\n    -webkit-backdrop-filter: blur(5px);\n    border-radius: 50px;\n  }\n\n  &:hover::before {\n    transform: translate(5%, 20%);\n    width: 110%;\n    height: 110%;\n  }\n\n  &:hover::after {\n    border-radius: 10px;\n    transform: translate(0, 0);\n    width: 100%;\n    height: 100%;\n  }\n\n  &:active::after {\n    transition: 0s;\n    transform: translate(0, 5%);\n  }\n`;\n","import { DelButton, Paragraph, Text } from './ContactList.styled';\nimport PropTypes from 'prop-types';\nimport { useDeleteContactMutation } from 'redux/contacts/contactsRTKSlice';\nimport { toast } from 'react-toastify';\n\nexport const Contact = ({ name, number, id }) => {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n\n  return (\n    <>\n      <Paragraph>\n        <Text>{name}:</Text> {number}\n      </Paragraph>\n      <DelButton\n        type=\"button\"\n        onClick={() => {\n          deleteContact(id);\n          toast.success(`Your contact ${name} was successfully deleted!`);\n        }}\n        disabled={isLoading}\n      >\n        Delete\n      </DelButton>\n    </>\n  );\n};\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","export const selectFilter = state => state.localFilter.filter;\n","import { ListItem, StyledList } from './ContactList.styled';\nimport { Contact } from './Contact';\nimport { useFetchContactsQuery } from 'redux/contacts/contactsRTKSlice';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { selectIsLoggedIn } from 'redux/auth/selectors';\n\nexport const ContactList = () => {\n  const { data: contacts, error, isLoading } = useFetchContactsQuery();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  const filterName = useSelector(selectFilter).toLowerCase().trim();\n  const filteredContacts =\n    filterName === ''\n      ? contacts\n      : contacts.filter(friend =>\n          friend.name.toLowerCase().includes(filterName)\n        );\n\n  const shouldShow = contacts && isLoggedIn;\n\n  return (\n    <div>\n      {shouldShow && (\n        <StyledList>\n          {filteredContacts.map(contact => (\n            <ListItem key={contact.id}>\n              <Contact\n                id={contact.id}\n                name={contact.name}\n                number={contact.number}\n              />\n            </ListItem>\n          ))}\n        </StyledList>\n      )}\n\n      {isLoading && <b> Loading...</b>}\n\n      {error && toast.error('Something wrong :( Please, try again later!')}\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledInput = styled.input`\n  padding-left: 15px;\n  width: 200px;\n  height: 30px;\n  font: bold italic large serif;\n`;\n\nexport const StyledLabel = styled.label`\n  display: inline-flex;\n  align-items: center;\n  gap: 20px;\n  font-size: 18px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from 'redux/filter/filterSlice';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { StyledInput, StyledLabel } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleFilterChange = e => {\n    dispatch(changeFilter(e.target.value));\n  };\n\n  return (\n    <div>\n      <StyledLabel htmlFor=\"filter\">\n        Find contacts by name:\n        <StyledInput\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={handleFilterChange}\n        />\n      </StyledLabel>\n    </div>\n  );\n};\n","import React from 'react';\nimport { MainTitle, Title, Wrapper } from 'components/App/App.styled';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ToastContainer } from 'react-toastify';\nimport { Filter } from 'components/Filter/Filter';\n\nfunction Contacts() {\n  return (\n    <Wrapper>\n      <ToastContainer />\n      <MainTitle>Phonebook</MainTitle>\n      <ContactForm />\n      <Title>Contacts</Title>\n      <Filter />\n      <ContactList />\n    </Wrapper>\n  );\n}\n\nexport default Contacts;\n"],"names":["Wrapper","styled","MainTitle","Title","StyledForm","Form","StyledLabel","StyledInput","Field","StyledErrorMessage","ErrorMessage","StyledButton","schema","yup","shape","name","matches","message","excludeEmptyString","required","number","initialValues","ContactForm","contacts","useFetchContactsQuery","data","useAddContactMutation","addContact","isLoading","handleSubmit","values","resetForm","find","toLowerCase","toast","onSubmit","validationSchema","autoComplete","htmlFor","type","component","StyledList","ListItem","Paragraph","Text","DelButton","Contact","id","useDeleteContactMutation","deleteContact","onClick","disabled","selectFilter","state","localFilter","filter","ContactList","error","isLoggedIn","useSelector","selectIsLoggedIn","filterName","trim","filteredContacts","friend","includes","shouldShow","map","contact","Filter","dispatch","useDispatch","value","onChange","e","changeFilter","target"],"sourceRoot":""}